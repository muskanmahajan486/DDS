<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
       default-autowire="byName">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>

    <bean id="baseSessionFactory"  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" abstract="true">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.openremote.devicediscovery.db.CustomMySQL5Dialect</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
	
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" parent="baseSessionFactory">
        <property name="annotatedClasses">
            <list>
                <value>org.openremote.devicediscovery.domain.Account</value>
                <value>org.openremote.devicediscovery.domain.User</value>
                <value>org.openremote.devicediscovery.domain.DiscoveredDevice</value>
                <value>org.openremote.devicediscovery.domain.DiscoveredDeviceAttr</value>
            </list>
        </property>
    </bean>

	<bean id="genericDAO" class="org.openremote.devicediscovery.GenericDAO"></bean>
	
    <bean id="component" class="org.restlet.ext.spring.SpringComponent">
        <property name="defaultTarget" ref="application"/>
    </bean>
    
    <bean id="application" class="org.openremote.devicediscovery.DeviceDiscoveryServiceApplication">
        <property name="root" ref="router"/>
    </bean>
    
    <bean name="router" class="org.restlet.ext.spring.SpringBeanRouter" />
    
    <bean name="/rest/discoveredDevices" class="org.openremote.devicediscovery.resources.DeviceDiscoveryCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>
    <bean name="/rest/discoveredDevices/{deviceOid}" class="org.openremote.devicediscovery.resources.DeviceDiscoveryCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>

</beans>
